<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cyggie.Plugins.Logs</name>
    </assembly>
    <members>
        <member name="T:Cyggie.Plugins.Logs.LogEventArgs">
            <summary>
            Event arguments for a log
            </summary>
        </member>
        <member name="P:Cyggie.Plugins.Logs.LogEventArgs.Type">
            <summary>
            Type of log
            </summary>
        </member>
        <member name="P:Cyggie.Plugins.Logs.LogEventArgs.Log">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cyggie.Plugins.Logs.LogEventArgs.StackTrace">
            <summary>
            The log's stack trace
            </summary>
        </member>
        <member name="T:Cyggie.Plugins.Logs.Models.Interfaces.ILog">
            <summary>
            Interface for a log model used by <see cref="T:Cyggie.Plugins.Logs.Log"/> when calling logs
            </summary>
        </member>
        <member name="P:Cyggie.Plugins.Logs.Models.Interfaces.ILog.Message">
            <summary>
            Message to log
            </summary>
        </member>
        <member name="P:Cyggie.Plugins.Logs.Models.Interfaces.ILog.Args">
            <summary>
            Arguments with the log
            </summary>
        </member>
        <member name="P:Cyggie.Plugins.Logs.Models.Interfaces.ILog.Timestamp">
            <summary>
            Timestamp of the log following the format (hour:minute:second:millisecond, eg. 14:53:24:460)
            </summary>
        </member>
        <member name="M:Cyggie.Plugins.Logs.Models.Interfaces.ILog.Print(Cyggie.Plugins.Logs.LogTypes,System.String,System.String,System.Object[])">
            <summary>
            Print the log to wherever
            </summary>
            <returns>Stacktrace of the log</returns>
        </member>
        <member name="T:Cyggie.Plugins.Logs.Models.LogConsole">
            <summary>
            Log model for logging into the console using <see cref="M:System.Console.WriteLine"/>
            </summary>
        </member>
        <member name="P:Cyggie.Plugins.Logs.Models.LogConsole.Message">
            <inheritdoc/>
        </member>
        <member name="P:Cyggie.Plugins.Logs.Models.LogConsole.Args">
            <inheritdoc/>
        </member>
        <member name="P:Cyggie.Plugins.Logs.Models.LogConsole.Timestamp">
            <inheritdoc/>
        </member>
        <member name="M:Cyggie.Plugins.Logs.Models.LogConsole.Print(Cyggie.Plugins.Logs.LogTypes,System.String,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:Cyggie.Plugins.Logs.Log">
            <summary>
            Static class to manage Logs
            </summary>
        </member>
        <member name="T:Cyggie.Plugins.Logs.Log.LogEvent">
            <summary>
            Event called when there's a new log
            </summary>
            <param name="args">Event args object</param>
        </member>
        <member name="F:Cyggie.Plugins.Logs.Log.OnLogEvent">
            <summary>
            Event called when there's a new log
            </summary>
        </member>
        <member name="M:Cyggie.Plugins.Logs.Log.Debug(System.Object,System.String,System.Object[])">
            <summary>
            Send a debug message <br/>
            If the current profile does not include Debugs, this will be ignored <br/>
            You can manage profiles in the toolbar at Cyggie/Package Configurations <br/>
            Format: Tag | [Timestamp] Message StackTrace
            </summary>
            <param name="message">Message to log</param>
            <param name="tag">Tag to add</param>
            <param name="args"></param>
        </member>
        <member name="M:Cyggie.Plugins.Logs.Log.Warning(System.Object,System.String,System.Object[])">
            <summary>
            Send a warning message <br/>
            If the current profile does not include Warnings, this will be ignored <br/>
            You can manage profiles in the toolbar at Cyggie/Package Configurations
            Format: Tag | [Timestamp] Message StackTrace
            </summary>
            <param name="message">Message to log</param>
            <param name="tag">Tag to add</param>
            <param name="args"></param>
        </member>
        <member name="M:Cyggie.Plugins.Logs.Log.Error(System.Object,System.String,System.Object[])">
            <summary>
            Send a error message <br/>
            If the current profile does not include Errors, this will be ignored <br/>
            You can manage profiles in the toolbar at Cyggie/Package Configurations
            Format: Tag | [Timestamp] Message StackTrace
            </summary>
            <param name="message">Message to log</param>
            <param name="tag">Tag to add</param>
            <param name="args"></param>
        </member>
        <member name="M:Cyggie.Plugins.Logs.Log.ToggleLogs(Cyggie.Plugins.Logs.LogTypes)">
            <summary>
            Toggle the enabled log types
            </summary>
        </member>
        <member name="M:Cyggie.Plugins.Logs.Log.SetLogModel``1">
            <summary>
            Set the log model to use
            </summary>
            <typeparam name="T">Log model to use for any logs that are sent through</typeparam>
        </member>
        <member name="T:Cyggie.Plugins.Logs.LogTypes">
            <summary>
            Type of supported logs
            </summary>
        </member>
        <member name="F:Cyggie.Plugins.Logs.LogTypes.None">
            <summary>
            None enabled
            </summary>
        </member>
        <member name="F:Cyggie.Plugins.Logs.LogTypes.Debug">
            <summary>
            <see cref="M:Cyggie.Plugins.Logs.Log.Debug(System.Object,System.String,System.Object[])"/> enabled
            </summary>
        </member>
        <member name="F:Cyggie.Plugins.Logs.LogTypes.Warning">
            <summary>
            <see cref="M:Cyggie.Plugins.Logs.Log.Warning(System.Object,System.String,System.Object[])"/> enabled
            </summary>
        </member>
        <member name="F:Cyggie.Plugins.Logs.LogTypes.Error">
            <summary>
            <see cref="M:Cyggie.Plugins.Logs.Log.Error(System.Object,System.String,System.Object[])"/> enabled
            </summary>
        </member>
    </members>
</doc>
