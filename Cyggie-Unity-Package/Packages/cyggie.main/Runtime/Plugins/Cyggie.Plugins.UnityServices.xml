<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cyggie.Plugins.UnityServices</name>
    </assembly>
    <members>
        <member name="T:Cyggie.Plugins.UnityServices.Models.IServiceMono">
            <summary>
            Interface for a service that needs access to the Monobehaviour of the service manager
            </summary>
        </member>
        <member name="M:Cyggie.Plugins.UnityServices.Models.IServiceMono.OnMonoBehaviourAssigned(UnityEngine.MonoBehaviour)">
            <summary>
            Called when the monobehaviour is assigned after all services are initialized
            </summary>
        </member>
        <member name="T:Cyggie.Plugins.UnityServices.Models.ServiceConfigurationSO">
            <summary>
            Abstract class used by the ServiceManagerMono in Unity <br/>
            
            Note: <br/>
            If you inherit this with a custom <see cref="T:Cyggie.Plugins.Services.Models.ServiceConfiguration"/> and use this with <see cref="T:Cyggie.Plugins.Services.Models.ServiceManager"/> <br/>
            Your configuration will be NULL <br/>
            Since it is impossible to create a ScriptableObject from an external project outside of Unity <br/>
            However, you can still use const variables within it if you wish to
            </summary>
        </member>
    </members>
</doc>
